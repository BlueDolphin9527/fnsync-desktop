# workflow name
name: release

# on events
on:
  push:
    tags: ["v*"]

# jobs
jobs:
  # generate build cross-platform build files
  release:
    name: Generate cross-platform builds
    strategy:
      matrix:
        go_version:
          - 1.16.x
    runs-on: macos-latest
    steps:
      # step 1: checkout repository code
      - name: Checkout the repository
        uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}

      - run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
      - run: echo "BUILDDATE=$(date '+%F-%T')" >> $GITHUB_ENV
      - run: echo "COMMIT=$(git rev-parse --verify HEAD)" >> $GITHUB_ENV
      - run: echo "APP_NAME=FnSync" >> $GITHUB_ENV

      # step 2: generate build files
      - name: Generate build files
        env:
          APP_NAME: ${{ env.APP_NAME }}
          VERSION: ${{ env.VERSION }}
          BUILDDATE: ${{ env.BUILDDATE }}
          COMMIT: ${{ env.COMMIT }}
        run: |
          # wails build
          export PATH="$GOPATH/bin:$PATH"
          go get github.com/wailsapp/wails/v2/cmd/wails@v2.0.0-alpha.65
          cd src
          go mod tidy
          go mod vendor
          wails build -package -production -ldflags "-w -s -X main.Version=$VERSION -X main.BuildDate=$BUILDDATE -X main.Commit=$COMMIT -X main.Mode=prod"

      # step 3: compress build files
      - name: Compress build files
        run: cd ./src/build/darwin/desktop && for i in *; do tar -czf $i.tar.gz $i; done

      # step 4: Upload binary to GitHub Release
      - name: Upload binary to GitHub Release
        uses: svenstaro/upload-release-action@v2
        if: "startsWith(github.ref, 'refs/tags/')"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./src/build/darwin/desktop/*.tar.gz
          file_glob: true
          overwrite: true
          tag: ${{ github.ref }}
